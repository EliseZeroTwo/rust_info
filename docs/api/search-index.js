var N=null,E="",T="t",U="u",searchIndex={};
var R=["rust_info","version","channel","rustinfo","result","to_owned","clone_into","try_from","try_into","borrow_mut","rustchannel","formatter","RustInfo","RustChannel"];

searchIndex["rust_info"]={"doc":R[0],"i":[[5,"get",R[0],"Loads and returns the current rust compiler version and…",N,[[],[R[3]]]],[0,"types",E,"types",N,N],[3,R[12],"rust_info::types","Holds the current rust installation and setup information",N,N],[12,R[1],E,R[1],0,N],[12,R[2],E,R[2],0,N],[12,"target_arch",E,"target arch cfg value",0,N],[12,"target_env",E,"target env cfg value",0,N],[12,"target_os",E,"target OS cfg value",0,N],[12,"target_pointer_width",E,"target pointer width cfg value",0,N],[12,"target_vendor",E,"target vendor cfg value",0,N],[12,"target_triple",E,"target triple constructed from target arc, vendor, os and…",0,N],[4,R[13],E,"Rust channel type",N,N],[13,"Stable",E,"Rust stable channel",1,N],[13,"Beta",E,"Rust beta channel",1,N],[13,"Nightly",E,"Rust nightly channel",1,N],[11,"new",E,"Returns new instance",0,[[],[R[3]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[[T],["self"]]]],[11,R[7],E,E,0,[[[U]],[R[4]]]],[11,R[8],E,E,0,[[],[R[4]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,"type_id",E,E,0,[[["self"]],["typeid"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[[T],["self"]]]],[11,R[7],E,E,1,[[[U]],[R[4]]]],[11,R[8],E,E,1,[[],[R[4]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,"type_id",E,E,1,[[["self"]],["typeid"]]],[11,"eq",E,E,1,[[[R[10]],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[3]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[3]],["self"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[10]]]],[11,"clone",E,E,0,[[["self"]],[R[3]]]],[11,"fmt",E,E,1,[[[R[11]],["self"]],[R[4]]]],[11,"fmt",E,E,0,[[[R[11]],["self"]],[R[4]]]]],"p":[[3,R[12]],[4,R[13]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);